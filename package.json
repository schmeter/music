{
  "name": "music",
  "version": "0.1.0",
  "description": "music",
  "repository": {
    "type": "git",
    "url": "git@github.com:schmeter/music.git"
  },
  "author": "schmeter <schmeter@gmail.com>",
  "license": "MIT",
  "private": true,
  "main": "src/js/main.js",
  "browserify": {
    "transform": [
      [
        "babelify",
        {
          "ignore": [
            "**/*/node_modules/**/*",
            "**/*/src/js/lib/*"
          ]
        }
      ],
      "envify"
    ]
  },
  "dependencies": {
    "@babel/core": "^7.7.4",
    "@babel/plugin-proposal-class-properties": "^7.7.4",
    "@babel/plugin-proposal-decorators": "^7.7.4",
    "@babel/plugin-proposal-do-expressions": "^7.7.4",
    "@babel/plugin-proposal-export-default-from": "^7.7.4",
    "@babel/plugin-proposal-export-namespace-from": "^7.7.4",
    "@babel/plugin-proposal-function-bind": "^7.7.4",
    "@babel/plugin-proposal-function-sent": "^7.7.4",
    "@babel/plugin-proposal-json-strings": "^7.7.4",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.7.4",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.7.4",
    "@babel/plugin-proposal-numeric-separator": "^7.7.4",
    "@babel/plugin-proposal-object-rest-spread": "^7.7.4",
    "@babel/plugin-proposal-optional-chaining": "^7.7.4",
    "@babel/plugin-proposal-pipeline-operator": "^7.7.4",
    "@babel/plugin-proposal-throw-expressions": "^7.7.4",
    "@babel/plugin-syntax-dynamic-import": "^7.7.4",
    "@babel/plugin-syntax-import-meta": "^7.7.4",
    "@babel/polyfill": "^7.7.0",
    "@babel/preset-env": "^7.7.4",
    "@babel/preset-react": "^7.7.4",
    "@babel/runtime": "^7.7.4",
    "autobind-decorator": "^2.4.0",
    "babel-eslint": "^10.0.3",
    "babel-jest": "^24.9.0",
    "babelify": "^10.0.0",
    "browser-sync": "^2.26.7",
    "browserify": "^16.5.0",
    "classnames": "^2.2.6",
    "connect-history-api-fallback": "^1.6.0",
    "date-fns": "^2.8.1",
    "envify": "^4.1.0",
    "enzyme": "^3.10.0",
    "enzyme-adapter-react-16": "^1.15.1",
    "enzyme-to-json": "^3.4.3",
    "eslint": "^6.7.2",
    "eslint-config-semistandard": "^15.0.0",
    "eslint-config-standard": "^13.0.1",
    "eslint-plugin-import": "^2.18.2",
    "eslint-plugin-jest": "^23.1.1",
    "eslint-plugin-node": "^10.0.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-react": "^7.17.0",
    "eslint-plugin-standard": "^4.0.1",
    "exorcist": "^1.0.1",
    "font-awesome": "^4.7.0",
    "grunt": "^1.0.4",
    "grunt-browser-sync": "^2.2.0",
    "grunt-browserify": "^5.3.0",
    "grunt-cli": "^1.3.2",
    "grunt-contrib-clean": "^2.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^4.0.1",
    "grunt-contrib-watch": "^1.1.0",
    "grunt-env": "^1.0.1",
    "grunt-exorcise": "^2.1.1",
    "grunt-sass": "^3.1.0",
    "grunt-tree": "^1.1.1",
    "id3-parser": "^2.0.0",
    "jest": "^24.9.0",
    "load-grunt-tasks": "^5.1.0",
    "markdown": "^0.5.0",
    "md5": "^2.2.1",
    "node-sass": "^4.13.0",
    "node-sass-globbing": "0.0.23",
    "npm-update-all": "^1.0.1",
    "prop-types": "^15.7.2",
    "ramda": "^0.26.1",
    "react": "^16.12.0",
    "react-dom": "^16.12.0",
    "react-redux": "^7.1.3",
    "react-router-dom": "^5.1.2",
    "react-test-renderer": "^16.12.0",
    "react-transition-group": "^4.3.0",
    "redux": "^4.0.4",
    "redux-devtools-extension": "^2.13.8",
    "redux-logger": "^3.0.6",
    "redux-thunk": "^2.3.0",
    "reset-css": "^5.0.1",
    "sass-lint": "^1.13.1",
    "shelljs": "^0.8.3",
    "standard": "^14.3.1",
    "typescript": "^3.7.3",
    "whatwg-fetch": "^3.0.0"
  },
  "scripts": {
    "start": "grunt default",
    "watch": "npm run start",
    "lint:js": "eslint --ignore-path .gitignore .",
    "lint:js:fix": "npm run lint:js -- --fix",
    "lint:sass": "sass-lint -v -q",
    "lint": "npm run lint:sass && npm run lint:js",
    "test": "jest",
    "test:watch": "npm test -- --watch",
    "test:cover": "npm test -- --coverage",
    "check": "npm run lint && npm test",
    "build": "npm run check && grunt build:release",
    "build:prod": "npm run check && grunt build:prod",
    "preview": "npm run build:prod && grunt browserSync watch",
    "update": "npm-update-all"
  }
}
